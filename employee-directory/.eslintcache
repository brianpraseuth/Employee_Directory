[{"/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/index.js":"1","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/App.js":"2","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/Header.js":"3","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/Search.js":"4","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/EmTable.js":"5","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/EmCell.js":"6"},{"size":169,"mtime":1607474232263,"results":"7","hashOfConfig":"8"},{"size":682,"mtime":1607569555245,"results":"9","hashOfConfig":"8"},{"size":672,"mtime":1607477290682,"results":"10","hashOfConfig":"8"},{"size":774,"mtime":1607477498903,"results":"11","hashOfConfig":"8"},{"size":1613,"mtime":1607565773189,"results":"12","hashOfConfig":"8"},{"size":1094,"mtime":1607565621951,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1c9q62",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/index.js",[],["29","30"],"/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/App.js",[],"/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/Header.js",[],"/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/Search.js",[],"/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/EmTable.js",["31"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function EmTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Image</TableCell>\n            <TableCell align=\"right\">Name</TableCell>\n            <TableCell align=\"right\">Phone</TableCell>\n            <TableCell align=\"right\">Email</TableCell>\n            <TableCell align=\"right\">DOB</TableCell>\n          </TableRow>\n        </TableHead>\n        {/* <TableBody>\n          {rows.map((row) => (\n            <TableRow key={props.id}>\n              <TableCell align=\"right\"><img className={classes.avatar} src={props.image}></img></TableCell>\n              <TableCell align=\"right\">{props.name}</TableCell>\n              <TableCell align=\"right\">{props.phone}</TableCell>\n              <TableCell align=\"right\">{props.email}</TableCell>\n              <TableCell align=\"right\">{props.dob}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody> */}\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/EmCell.js",["32","33","34","35","36"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n    avatar: {\n      height: \"100px\",\n    },\n  });\n\nexport default function EmCell(props) {\n    const classes = useStyles();\n    return (\n        <TableBody>\n            <TableRow key={props.id}>\n              <TableCell align=\"right\"><img className={classes.avatar} src={props.image}></img></TableCell>\n              <TableCell align=\"right\">{props.name}</TableCell>\n              <TableCell align=\"right\">{props.phone}</TableCell>\n              <TableCell align=\"right\">{props.email}</TableCell>\n              <TableCell align=\"right\">{props.dob}</TableCell>\n            </TableRow>\n            </TableBody>\n    )\n}\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":17},{"ruleId":"41","severity":1,"message":"45","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":13},{"ruleId":"41","severity":1,"message":"46","line":6,"column":8,"nodeType":"43","messageId":"44","endLine":6,"endColumn":22},{"ruleId":"41","severity":1,"message":"47","line":7,"column":8,"nodeType":"43","messageId":"44","endLine":7,"endColumn":17},{"ruleId":"41","severity":1,"message":"48","line":9,"column":8,"nodeType":"43","messageId":"44","endLine":9,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":22,"column":40,"nodeType":"51","endLine":22,"endColumn":90},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'TableBody' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'Paper' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]