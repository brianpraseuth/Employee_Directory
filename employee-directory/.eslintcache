[{"/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/index.js":"1","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/App.js":"2","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/Header.js":"3","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/Search.js":"4","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/EmTable.js":"5","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/EmCell.js":"6"},{"size":169,"mtime":1608001837032,"results":"7","hashOfConfig":"8"},{"size":885,"mtime":1608001837020,"results":"9","hashOfConfig":"8"},{"size":672,"mtime":1608001837021,"results":"10","hashOfConfig":"8"},{"size":718,"mtime":1608001837021,"results":"11","hashOfConfig":"8"},{"size":1106,"mtime":1608001837021,"results":"12","hashOfConfig":"8"},{"size":1275,"mtime":1608001837021,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xk0num",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/index.js",[],["30","31"],"/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/App.js",[],"/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/Header.js",[],"/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/Search.js",["32"],"import React from 'react'\nimport { TextField, Button } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    searchArea: {\n      display:'flex', \n      color: 'white',\n      justifyContent:'center',\n      textAlign: \"center\",\n      backgroundColor: \"#cad2c5\",\n  },\n});\n\nexport default function Search(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.searchArea}>\n            <form style={{margin: \"20px\"}}>\n                <br></br>\n                <Button size=\"small\" variant=\"outlined\" style={{marginBottom: \"0\"}} onClick={props.handleSort}>Sort Alphabetically</Button>\n            </form>\n        </div>\n    )\n}\n","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/EmTable.js",["33"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function EmTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">Image</TableCell>\n            <TableCell align=\"right\">Name</TableCell>\n            <TableCell align=\"right\">Phone</TableCell>\n            <TableCell align=\"right\">Email</TableCell>\n            <TableCell align=\"right\">DOB</TableCell>\n          </TableRow>\n        </TableHead>\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/brianpraseuth/Desktop/Employee_Directory/employee-directory/src/components/EmCell.js",["34","35"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n    avatar: {\n      height: \"100px\",\n    },\n    table: {\n        minWidth: 650,\n      },\n  });\n\nexport default function EmCell(props) {\n    const classes = useStyles();\n    return (\n        <TableContainer component={Paper}>\n        <Table className={classes.table}>\n        <TableBody>\n            <TableRow key={props.id}>\n              <TableCell align=\"right\"><img className={classes.avatar} src={props.image}></img></TableCell>\n              <TableCell align=\"right\">{props.name}</TableCell>\n              <TableCell align=\"right\">{props.phone}</TableCell>\n              <TableCell align=\"right\">{props.email}</TableCell>\n              <TableCell align=\"right\">{props.dob}</TableCell>\n            </TableRow>\n            </TableBody>\n            </Table>\n            </TableContainer>\n    )\n}\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":19},{"ruleId":"40","severity":1,"message":"44","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":17},{"ruleId":"40","severity":1,"message":"45","line":7,"column":8,"nodeType":"42","messageId":"43","endLine":7,"endColumn":17},{"ruleId":"46","severity":1,"message":"47","line":27,"column":40,"nodeType":"48","endLine":27,"endColumn":90},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'TableBody' is defined but never used.","'TableHead' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]